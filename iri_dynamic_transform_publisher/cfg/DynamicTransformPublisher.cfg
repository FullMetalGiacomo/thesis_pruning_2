#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: 

PACKAGE='iri_dynamic_transform_publisher'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name                 Type      Reconf level   Description                     Default   Min   Max
gen.add("broadcast",         bool_t,   0,             "enable broadcasting",          True)
gen.add("parent_id",         str_t,    0,             "parent frame id",              "parent")
gen.add("frame_id",          str_t,    0,             "child frame id",               "child")
gen.add("period",            double_t, 0,             "period in ms",  100.0,         0.0,  10000.0)
gen.add("reset_translation", bool_t,   0,             "reset x y z offsets to zero",  False)
gen.add("x",                 double_t, 0,             "x offset in meters",           0.0,      -10000.0,  10000.0)
gen.add("y",                 double_t, 0,             "y offset in meters",           0.0,      -10000.0,  10000.0)
gen.add("z",                 double_t, 0,             "z offset in meters",           0.0,      -10000.0,  10000.0)
gen.add("reset_rotation",    bool_t,   0,             "reset roll pitch yaw to zero", False)
gen.add("roll",              double_t, 0,             "roll rotation in radians",     0.0, -3.14159,  3.14159)
gen.add("pitch",             double_t, 0,             "pitch rotation in radians",    0.0, -3.14159,  3.14159)
gen.add("yaw",               double_t, 0,             "yaw rotation in radians",      0.0, -3.14159,  3.14159)
gen.add("show_rosrun",       bool_t,   0,             "outputs ROS_INFO with rosrun equivalent",  False)

exit(gen.generate(PACKAGE, "DynamicTransformPublisherAlgorithm", "DynamicTransformPublisher"))


